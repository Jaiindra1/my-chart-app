{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Indra\\\\Desktop\\\\chart\\\\my-chart-app\\\\src\\\\components\\\\chart\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport data from '../';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  timeframe\n}) => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    // Filter data based on the timeframe (for simplicity, it's not implemented here)\n    setChartData(data);\n  }, [timeframe]);\n  const handlePointClick = data => {\n    alert(`Timestamp: ${data.activeLabel}\\nValue: ${data.activePayload[0].value}`);\n  };\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: chartData,\n      onClick: handlePointClick,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"timestamp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"value\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart, \"Leo9Xk/Ki5G6SkYc3yZESo07mWw=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","data","jsxDEV","_jsxDEV","Chart","timeframe","_s","chartData","setChartData","handlePointClick","alert","activeLabel","activePayload","value","width","height","children","onClick","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["C:/Users/Indra/Desktop/chart/my-chart-app/src/components/chart/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\nimport data from '../';\r\n\r\nconst Chart = ({ timeframe }) => {\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Filter data based on the timeframe (for simplicity, it's not implemented here)\r\n    setChartData(data);\r\n  }, [timeframe]);\r\n\r\n  const handlePointClick = (data) => {\r\n    alert(`Timestamp: ${data.activeLabel}\\nValue: ${data.activePayload[0].value}`);\r\n  };\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={400}>\r\n      <LineChart\r\n        data={chartData}\r\n        onClick={handlePointClick}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"timestamp\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAC7E,UAAU;AACjB,OAAOC,IAAI,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACAiB,YAAY,CAACP,IAAI,CAAC;EACpB,CAAC,EAAE,CAACI,SAAS,CAAC,CAAC;EAEf,MAAMI,gBAAgB,GAAIR,IAAI,IAAK;IACjCS,KAAK,CAAC,cAAcT,IAAI,CAACU,WAAW,YAAYV,IAAI,CAACW,aAAa,CAAC,CAAC,CAAC,CAACC,KAAK,EAAE,CAAC;EAChF,CAAC;EAED,oBACEV,OAAA,CAACH,mBAAmB;IAACc,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5Cb,OAAA,CAACV,SAAS;MACRQ,IAAI,EAAEM,SAAU;MAChBU,OAAO,EAAER,gBAAiB;MAAAO,QAAA,gBAE1Bb,OAAA,CAACN,aAAa;QAACqB,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCnB,OAAA,CAACR,KAAK;QAAC4B,OAAO,EAAC;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7BnB,OAAA,CAACP,KAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTnB,OAAA,CAACL,OAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXnB,OAAA,CAACJ,MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVnB,OAAA,CAACT,IAAI;QAAC8B,IAAI,EAAC,UAAU;QAACD,OAAO,EAAC,OAAO;QAACE,MAAM,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE1B,CAAC;AAAChB,EAAA,CA3BIF,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}